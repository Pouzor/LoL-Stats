<?php

namespace Pouzor\Bundle\LolStatBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ChampionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChampionRepository extends EntityRepository
{
    public function findAllOrdered() {
        $qBuilder = $this->getEntityManager()
        ->createQueryBuilder()
        ->from("PouzorLolStatBundle:Champion", "c")
        ->select('c')
        ->orderBy("c.name", "ASC");


        return $qBuilder->getQuery()->getArrayResult();
    }

    /**
    * @Return List of champion, sorted by $sort, filter by $type
    *
    */
    public function getFilter($user, $sort, $type = "all") {
        $qBuilder = $this->getEntityManager()
        ->createQueryBuilder()
        ->select('c.id, c.name, COUNT(g.id) as nb_match, SUM(g.win) as nb_win, COUNT(g.id)-SUM(g.win) as nb_loose, AVG(g.killed) as k, 
            AVG(g.death) as d, AVG(g.assist) as a, (SUM(g.win)/COUNT(g.id))*100 AS rate, AVG(g.minionsKilled) as cs, AVG(g.gold) as gold')
        ->from("PouzorLolStatBundle:Champion", "c")
        ->leftJoin("c.games", "g")
        ->where("g.idUser = :user")
        ->groupBy("c.id");

        
        $qBuilder->orderBy($sort, "DESC");



        if ($type == "CLASSIC")
           $qBuilder->andWhere("g.matchType = 'CLASSIC'"); 

        if ($type == "RANKED")
           $qBuilder->andWhere("g.matchType = 'CLASSIC'")
            ->andWhere("g.ranked = 1"); 


        $qBuilder->setParameter("user", $user);

        return $qBuilder->getQuery()->getArrayResult();
    }

}
